// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentManager.DataAccess.Data;

#nullable disable

namespace Student.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250423130515_addAllTable")]
    partial class addAllTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Student.Models.Classroom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClassId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameClass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Specialization_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Specialization_Id");

                    b.ToTable("Classrooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClassId = "CNT62CL",
                            NameClass = "Công nghệ thông tin khóa 62",
                            Specialization_Id = 1
                        },
                        new
                        {
                            Id = 2,
                            ClassId = "CNT62CL",
                            NameClass = "Công nghệ thông tin khóa 61",
                            Specialization_Id = 1
                        });
                });

            modelBuilder.Entity("Student.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FacultyId")
                        .HasColumnType("int");

                    b.Property<string>("Leader")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("FacultyId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentId = 111,
                            DepartmentName = "Khoa học máy tính",
                            FacultyId = 1,
                            Leader = "Ths. Nguyễn Hữu Tuân"
                        },
                        new
                        {
                            Id = 2,
                            DepartmentId = 112,
                            DepartmentName = "Hệ thống thông tin",
                            FacultyId = 1,
                            Leader = "Ths. Phạm Trung Minh"
                        });
                });

            modelBuilder.Entity("Student.Models.Faculty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("faculty_id")
                        .HasColumnType("int");

                    b.Property<string>("faculty_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Faculties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            faculty_id = 11,
                            faculty_name = "Khoa công nghệ thông tin"
                        },
                        new
                        {
                            Id = 2,
                            faculty_id = 12,
                            faculty_name = "Viện cơ khí"
                        });
                });

            modelBuilder.Entity("Student.Models.Majors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("majors_id")
                        .HasColumnType("int");

                    b.Property<string>("majors_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Majors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            majors_id = 7580203,
                            majors_name = "Công nghệ thông tin"
                        },
                        new
                        {
                            Id = 2,
                            majors_id = 7520320,
                            majors_name = "Kỹ thuật xây dựng"
                        });
                });

            modelBuilder.Entity("Student.Models.Specialization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClassCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MajorsId")
                        .HasColumnType("int");

                    b.Property<string>("SpecializationCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecializationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MajorsId");

                    b.ToTable("Specializations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClassCode = "CNT",
                            MajorsId = 1,
                            SpecializationCode = "D403",
                            SpecializationName = "Công nghệ thông tin"
                        },
                        new
                        {
                            Id = 2,
                            ClassCode = "KPM",
                            MajorsId = 1,
                            SpecializationCode = "D403",
                            SpecializationName = "Công nghệ phần mềm"
                        });
                });

            modelBuilder.Entity("Student.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseCode")
                        .HasColumnType("int");

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("CourseCode")
                        .IsUnique();

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseCode = 17500,
                            Credits = 3,
                            SubjectName = "Toán rời rạc"
                        },
                        new
                        {
                            Id = 2,
                            CourseCode = 17501,
                            Credits = 3,
                            SubjectName = "Tin học văn phòng"
                        });
                });

            modelBuilder.Entity("Student.Models.Classroom", b =>
                {
                    b.HasOne("Student.Models.Specialization", "Specialization")
                        .WithMany()
                        .HasForeignKey("Specialization_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Specialization");
                });

            modelBuilder.Entity("Student.Models.Department", b =>
                {
                    b.HasOne("Student.Models.Faculty", "Faculty")
                        .WithMany()
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("Student.Models.Specialization", b =>
                {
                    b.HasOne("Student.Models.Majors", "Majors")
                        .WithMany()
                        .HasForeignKey("MajorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Majors");
                });
#pragma warning restore 612, 618
        }
    }
}
